import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from config_reader import config

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=config.bot_token.get_secret_value())
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
button1 = InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏ –æ–¥–∏–Ω", callback_data="button_click")
button2 = InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏ –¥–≤–∞", callback_data="button2_click")
button3 = InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏ —Ç—Ä–∏", callback_data="button3_click")
button4 = InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏ —á–µ—Ç—ã—Ä–µ", callback_data="button4_click")
keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1,button2],[button3,button4]])


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ —á—Ç–æ –Ω–∏–±—É–¥—å \n –¥–≤–∞ —Ç—Ä–∏ ", reply_markup=keyboard)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /go
@dp.message(Command("go"))
async def cmd_start(message: types.Message):
    await message.answer("GO!", reply_markup=keyboard)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 1
@dp.callback_query(F.data == "button_click")
async def button(callback: types.CallbackQuery):
    await callback.message.answer("üòÇ")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 2
@dp.callback_query(F.data == "button2_click")
async def button2(callback: types.CallbackQuery):
    await callback.message.answer("–î–≤–∞")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 3
@dp.callback_query(F.data == "button3_click")
async def button3(callback: types.CallbackQuery):
    await callback.message.answer("–¢—Ä–∏")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 4
@dp.callback_query(F.data == "button4_click")
async def button4(callback: types.CallbackQuery):
    await callback.message.answer("–ß–µ—Ç—ã—Ä–µ")

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


